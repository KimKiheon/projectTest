{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kang Nam Kyu\\\\Desktop\\\\projectTest\\\\src\\\\screens\\\\SignUpScreen.js\";\nimport styled, { ThemeProvider } from 'styled-components';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, createRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { render } from 'react-dom';\nexport default function SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userEmail = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userPwd = _useState6[0],\n      setPwd = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      errortext = _useState10[0],\n      setErrortext = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      errortext2 = _useState12[0],\n      setErrortext2 = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isRegistraionSuccess = _useState14[0],\n      setIsRegistraionSuccess = _useState14[1];\n\n  var emailInputRef = createRef();\n  var passwordInputRef = createRef();\n  var nameInputRef = createRef();\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      titleValid = _useState16[0],\n      setTitleValid = _useState16[1];\n\n  var titleChangeHandler = function titleChangeHandler(text) {\n    if (text.trim().length === 0) {\n      setTitleValid(false);\n    } else {\n      setTitleValid(true);\n    }\n\n    setText1(text);\n  };\n\n  var handleSubmitButton = function handleSubmitButton() {\n    setErrortext('');\n\n    if (!userName) {\n      alert('이름을 입력해주세요');\n      return;\n    }\n\n    if (!userEmail) {\n      alert('이메일을 입력해주세요');\n      return;\n    }\n\n    if (!userPwd) {\n      alert('비밀번호를 입력해주세요');\n      return;\n    }\n\n    setLoading(true);\n    console.log(userName + userEmail + userPwd);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.headertext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Sign UP\")), React.createElement(View, {\n    style: styles.case2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"ID\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Name(20\\uC790 \\uC774\\uB0B4)\",\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    returnKeyType: \"next\",\n    blurOnSubmit: false,\n    maxLength: 20,\n    autoFocus: true,\n    ref: nameInputRef,\n    onSubmitEditing: function onSubmitEditing() {\n      return emailInputRef.current && emailInputRef.current.focus();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"EMAIL\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Email(50\\uC790 \\uC774\\uB0B4)\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    returnKeyType: \"next\",\n    blurOnSubmit: false,\n    maxLength: 50,\n    autoFocus: true,\n    ref: emailInputRef,\n    onSubmitEditing: function onSubmitEditing() {\n      return passwordInputRef.current && passwordInputRef.current.focus();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"PASSWORD\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Password(20\\uC790 \\uC774\\uB0B4)\",\n    onChangeText: function onChangeText(text) {\n      return setPwd(text);\n    },\n    returnKeyType: \"send\",\n    blurOnSubmit: false,\n    maxLength: 20,\n    secureTextEntry: true,\n    ref: passwordInputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: handleSubmitButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.join,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, \"Sign up\"))), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  container2: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    paddingVertical: 50,\n    paddingHorizontal: 50,\n    backgroundColor: 'white'\n  },\n  header: {\n    alignItems: 'flex-start'\n  },\n  case2: {\n    alignSelf: 'center',\n    paddingVertical: 50\n  },\n  headertext: {\n    fontSize: 35,\n    fontWeight: '600',\n    paddingLeft: 15,\n    color: '#292E49'\n  },\n  text2: {\n    fontSize: 20\n  },\n  input: {\n    height: 40,\n    width: 278,\n    borderWidth: 1,\n    borderRadius: 20,\n    paddingVertical: 10,\n    paddingHorizontal: 10\n  },\n  button: {\n    backgroundColor: '#FE9F59',\n    width: 278,\n    height: 45,\n    marginTop: 20,\n    borderRadius: 30,\n    justifyContent: 'center',\n    alignSelf: 'center'\n  },\n  join: {\n    color: 'white',\n    fontSize: 18,\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Kang Nam Kyu/Desktop/projectTest/src/screens/SignUpScreen.js"],"names":["styled","ThemeProvider","StatusBar","React","useState","createRef","render","SignUpScreen","navigation","userName","setName","userEmail","setEmail","userPwd","setPwd","loading","setLoading","errortext","setErrortext","errortext2","setErrortext2","isRegistraionSuccess","setIsRegistraionSuccess","emailInputRef","passwordInputRef","nameInputRef","titleValid","setTitleValid","titleChangeHandler","text","trim","length","setText1","handleSubmitButton","alert","console","log","styles","container","container2","header","headertext","case2","text2","input","current","focus","button","join","StyleSheet","create","flex","justifyContent","backgroundColor","paddingVertical","paddingHorizontal","alignItems","alignSelf","fontSize","fontWeight","paddingLeft","color","height","width","borderWidth","borderRadius","marginTop"],"mappings":"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","sourcesContent":["import styled, {ThemeProvider} from 'styled-components';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport React, {useState, createRef} from 'react';\r\nimport { StyleSheet, Text, TextInput, TouchableOpacity, View, ScrollView, Keyboard, Modal, Button, SafeAreaView } from 'react-native';\r\nimport { render } from 'react-dom';\r\n\r\n\r\n\r\nexport default function SignUpScreen({navigation}) {\r\n    const [userName,setName]=useState('');\r\n    const [userEmail,setEmail]=useState('');\r\n    const [userPwd,setPwd]=useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [errortext, setErrortext] = useState('');\r\n    const [errortext2, setErrortext2] = useState('');\r\n    const [isRegistraionSuccess, setIsRegistraionSuccess] = useState(false);\r\n    const emailInputRef = createRef();\r\n    const passwordInputRef = createRef();\r\n    const nameInputRef = createRef();\r\n    \r\n    const [titleValid, setTitleValid] = useState(false);\r\n\r\n    const titleChangeHandler = (text) => {\r\n    if (text.trim().length === 0) {\r\n        setTitleValid(false);\r\n    } else {\r\n        setTitleValid(true);\r\n    }\r\n    setText1(text);\r\n    };\r\n\r\n    const handleSubmitButton = () => {\r\n        setErrortext('');\r\n    \r\n        if (!userName) {\r\n          alert('이름을 입력해주세요');\r\n          return;\r\n        }\r\n        if (!userEmail) {\r\n          alert('이메일을 입력해주세요');\r\n          return;\r\n        }\r\n        if (!userPwd) {\r\n          alert('비밀번호를 입력해주세요');\r\n          return;\r\n        }\r\n    \r\n        //Show Loader\r\n        setLoading(true);\r\n        console.log(userName + userEmail + userPwd);\r\n\r\n        //회원 리스트와 비교하여 있는지 여부 함수\r\n        //회원 가입 완료 여부 함수\r\n        //회원 가입 버튼 누를 시 홈페이지로 이동 하는 함수\r\n        \r\n    /*\r\n        var dataToSend = {\r\n          stu_nick: userName,\r\n          stu_id: userId,\r\n          stu_grade: userGrade,\r\n          password: userPassword,\r\n        };\r\n        var formBody = [];\r\n        for (var key in dataToSend) {\r\n          var encodedKey = encodeURIComponent(key);\r\n          var encodedValue = encodeURIComponent(dataToSend[key]);\r\n          formBody.push(encodedKey + '=' + encodedValue);\r\n        }\r\n        formBody = formBody.join('&');\r\n    \r\n        fetch('http://localhost:3001/api/user/register', {\r\n          method: 'POST',\r\n          body: formBody,\r\n          headers: {\r\n            //Header Defination\r\n            'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\r\n          },\r\n        })\r\n          .then((response) => response.json())\r\n          .then((responseJson) => {\r\n            //Hide Loader\r\n            setLoading(false);\r\n            setErrortext2('');\r\n            console.log(responseJson);\r\n            // If server response message same as Data Matched\r\n            if (responseJson.status === 'success') {\r\n              setIsRegistraionSuccess(true);\r\n              console.log('Registration Successful. Please Login to proceed');\r\n            } else if (responseJson.status === 'duplicate') {\r\n              setErrortext2('이미 존재하는 아이디입니다.');\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            //Hide Loader\r\n            setLoading(false);\r\n            console.error(error);\r\n          });*/\r\n      };\r\n\r\n    return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.container2}>\r\n        <View style={styles.header}>\r\n            <Text style={styles.headertext}>Sign UP</Text>\r\n        </View>\r\n        <View style={styles.case2}>\r\n            <Text style={styles.text2}>ID</Text>\r\n            <TextInput \r\n              style={styles.input}\r\n              \r\n              placeholder=\"Name(20자 이내)\"\r\n              onChangeText={(text) => setName(text)}\r\n              returnKeyType=\"next\"\r\n              blurOnSubmit={false}\r\n              maxLength={20}\r\n              autoFocus={true}\r\n              ref={nameInputRef}\r\n              onSubmitEditing={()=>\r\n                emailInputRef.current && emailInputRef.current.focus()\r\n              }\r\n            />\r\n            <Text style={styles.text2}>EMAIL</Text>\r\n            <TextInput \r\n              style={styles.input}\r\n              placeholder=\"Email(50자 이내)\"\r\n              onChangeText={(text) => setEmail(text)}\r\n              returnKeyType=\"next\"\r\n              blurOnSubmit={false}\r\n              maxLength={50}\r\n              autoFocus={true}\r\n              ref={emailInputRef}\r\n              onSubmitEditing={()=>\r\n                passwordInputRef.current && passwordInputRef.current.focus()\r\n              }\r\n            />\r\n            <Text style={styles.text2}>PASSWORD</Text>\r\n            <TextInput \r\n              style={styles.input}\r\n              \r\n              placeholder=\"Password(20자 이내)\"\r\n              onChangeText={(text) => setPwd(text)}\r\n              returnKeyType=\"send\"\r\n              blurOnSubmit={false}\r\n              maxLength={20}\r\n              secureTextEntry={true}\r\n              //autoFocus={true}\r\n              ref={passwordInputRef}\r\n              \r\n            />\r\n            <TouchableOpacity\r\n            style={styles.button}\r\n            \r\n            onPress={handleSubmitButton}\r\n            >\r\n                <Text style={styles.join}>Sign up</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n        <StatusBar style=\"auto\" />\r\n      </View>\r\n    </SafeAreaView>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent:'center',\r\n    backgroundColor: '#fff',\r\n  },\r\n  container2: {\r\n    flex: 1,\r\n    justifyContent: 'flex-start',\r\n    paddingVertical: 50,\r\n    paddingHorizontal: 50,\r\n    backgroundColor: 'white',\r\n  },\r\n  header: {\r\n    //flex:1,\r\n    //backgroundColor: 'white',\r\n    //justifyContent: 'flex-end'\r\n    alignItems: 'flex-start'\r\n  },\r\n  case2 : {\r\n    //flex:4,\r\n    //backgroundColor: 'white',\r\n    //justifyContent: 'center',\r\n    alignSelf: 'center',\r\n    paddingVertical: 50,\r\n  },\r\n  /*case3: {\r\n    //flex:2,\r\n    backgroundColor: 'white'\r\n  },*/\r\n\r\n  headertext: {\r\n      fontSize: 35,\r\n      fontWeight: '600',\r\n      paddingLeft: 15,\r\n      color: '#292E49'\r\n  },\r\n  text2: {\r\n      fontSize: 20\r\n  },\r\n  input:{\r\n      height:40,\r\n      width:278,\r\n      borderWidth:1,\r\n      borderRadius:20,\r\n      paddingVertical: 10,\r\n      paddingHorizontal: 10\r\n  },\r\n  button:{\r\n      backgroundColor: '#FE9F59',\r\n      width: 278,\r\n      height: 45,\r\n      marginTop: 20,\r\n      borderRadius: 30,\r\n      justifyContent: 'center',\r\n      alignSelf: 'center'\r\n  },\r\n  join: {\r\n      color: 'white',\r\n      fontSize:18,\r\n      //justifyContent: 'center',\r\n      alignSelf: 'center'\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}