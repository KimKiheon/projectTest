{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kang Nam Kyu\\\\Desktop\\\\projectTest\\\\src\\\\screens\\\\ForgetPasswordScreen.js\";\nimport { useGestureHandlerRef } from '@react-navigation/stack';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default function ForgetPasswordScreen() {\n  var _this = this;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var handleChangePassword = function handleChangePassword() {\n    if (!email) {\n      alert('ID를 입력하세요!!');\n      return;\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"Forgot Password\")), React.createElement(View, {\n    style: styles.inputForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.inputFormText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, \"NAME / EMAIL\"), React.createElement(TextInput, {\n    style: styles.inputFormInput,\n    placeholder: \"email\",\n    autoFocus: true,\n    returnKeyType: \"next\",\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    onSubmitEditing: function onSubmitEditing(event) {\n      return _this.onSubmitHandler(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: handleChangePassword,\n    activeOpacity: 0.9,\n    style: styles.FindBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.FindText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, \"Find\")))));\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  container2: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    paddingVertical: 50,\n    paddingHorizontal: 50\n  },\n  header: {\n    alignItems: 'flex-start'\n  },\n  headerText: {\n    fontSize: 35,\n    fontWeight: '600'\n  },\n  inputForm: {\n    paddingVertical: 30\n  },\n  inputFormText: {\n    paddingVertical: 10,\n    fontSize: 15,\n    fontWeight: '400'\n  },\n  inputFormInput: {\n    paddingVertical: 10,\n    paddingHorizontal: 10,\n    borderColor: '#000',\n    borderWidth: 1,\n    borderRadius: 20\n  },\n  FindBtnText: {\n    color: '#fff',\n    fontSize: 15,\n    fontWeight: '400'\n  },\n  FindBtn: {\n    marginTop: 30,\n    backgroundColor: '#FE9F59',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 40,\n    borderRadius: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/Kang Nam Kyu/Desktop/projectTest/src/screens/ForgetPasswordScreen.js"],"names":["useGestureHandlerRef","React","useState","ForgetPasswordScreen","email","setEmail","handleChangePassword","alert","styles","container","container2","header","headerText","inputForm","inputFormText","inputFormInput","event","onSubmitHandler","FindBtn","FindText","StyleSheet","create","flex","justifyContent","backgroundColor","paddingVertical","paddingHorizontal","alignItems","fontSize","fontWeight","borderColor","borderWidth","borderRadius","FindBtnText","color","marginTop","height"],"mappings":"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","sourcesContent":["import { useGestureHandlerRef } from '@react-navigation/stack';\r\nimport React, { useState } from 'react';\r\nimport { \r\n    StyleSheet,\r\n    Text,\r\n    TextInput,\r\n    Image,\r\n    SafeAreaView,\r\n    StatusBar,\r\n    TouchableOpacity,\r\n    View\r\n} from 'react-native';\r\nexport default function ForgetPasswordScreen() {\r\n    const [email, setEmail] = useState('');\r\n    \r\n    const handleChangePassword = () => {\r\n        if(!email){\r\n            alert('ID를 입력하세요!!');\r\n            return;\r\n        }\r\n        //ID가 존재하지 않을 경우\r\n        //비밀번호 바꾸기\r\n    }\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <View style={styles.container2} >\r\n                <View style={styles.header}>\r\n                    <Text style={styles.headerText}>Forgot Password</Text>\r\n                </View>\r\n                <View style={styles.inputForm}>\r\n                    <Text style={styles.inputFormText}>NAME / EMAIL</Text>\r\n                    <TextInput \r\n                        style={styles.inputFormInput}\r\n                        placeholder=\"email\"\r\n                        autoFocus={true}\r\n                        returnKeyType='next'\r\n                        onChangeText={(email) => setEmail(email)}\r\n                        onSubmitEditing={(event) => this.onSubmitHandler(event)}\r\n                    />\r\n                    <TouchableOpacity \r\n                        onPress={handleChangePassword}\r\n                        activeOpacity={0.9}\r\n                        style={styles.FindBtn}\r\n                    >\r\n                        <Text style={styles.FindText}>Find</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        justifyContent:'center',\r\n        backgroundColor: '#fff',\r\n    },\r\n    container2: {\r\n        flex:1,\r\n        justifyContent: 'flex-start',\r\n        paddingVertical: 50,\r\n        paddingHorizontal: 50,\r\n    },\r\n    header: {\r\n        alignItems: 'flex-start',\r\n    },\r\n    headerText: {\r\n        fontSize: 35,\r\n        fontWeight: '600'\r\n    },\r\n    inputForm: {\r\n        paddingVertical: 30,\r\n    },\r\n    inputFormText:{\r\n        paddingVertical: 10,\r\n        fontSize: 15,\r\n        fontWeight: '400'\r\n    },\r\n    inputFormInput:{\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 10,\r\n        borderColor: '#000',\r\n        borderWidth: 1,\r\n        borderRadius: 20\r\n    },\r\n    FindBtnText: {\r\n        color: '#fff',\r\n        fontSize: 15,\r\n        fontWeight: '400',\r\n    },\r\n    FindBtn: {\r\n        marginTop: 30,\r\n        backgroundColor: '#FE9F59',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: 40,\r\n        borderRadius: 20\r\n    }\r\n});\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}